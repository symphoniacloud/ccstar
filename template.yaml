AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: CCStar - A CCTray / CCMenu proxy for AWS CodeBuild and CodePipeline

Parameters:
  APILocalCacheTTL:
    Type: Number
    Default: 0
    MinValue: 0
    Description: |
      If greater than 0, number of seconds to cache generated API responses locally.
      This may be useful for high volume installations to reduce costs since it will reduce the number of calls to DynamoDB.
      A typically useful value here may be 10.

Metadata:
  AWS::ServerlessRepo::Application:
    Name: ccstar
    Description: A CCTray / CCMenu proxy for AWS CodeBuild and CodePipeline
    Author: Symphonia
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    Labels: ['ci', 'cd', 'devops', 'monitoring']
    HomePageUrl: https://github.com/symphoniacloud/ccstar
    SourceCodeUrl: https://github.com/symphoniacloud/ccstar

Outputs:
  CCTrayXMLURL:
    Value: !Sub "${ServerlessHttpApi.ApiEndpoint}/cctray.xml"

Globals:
  Function:
    Runtime: nodejs12.x
    Timeout: 30
    MemorySize: 256
    CodeUri: ./target/prod-lambda.zip

Resources:
  Projects:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: name
        Type: String

  ApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: api.handler
      Events:
        HttpEvent:
          Type: HttpApi
          Properties:
            Path: /cctray.xml
            Method: GET
      Environment:
        Variables:
          PROJECTS_TABLE: !Ref Projects
          LOG_LEVEL: debug
          LOCAL_CACHE_TTL: !Ref APILocalCacheTTL
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref Projects

  CodeBuildEventProcessor:
    Type: AWS::Serverless::Function
    Properties:
      Handler: codebuild.handler
      Environment:
        Variables:
          PROJECTS_TABLE: !Ref Projects
          LOG_LEVEL: debug
      Events:
        CodeBuildEvent:
          Type: CloudWatchEvent
          Properties:
            Pattern:
              source: [ aws.codebuild ]
              detail:
                build-status: [ IN_PROGRESS, SUCCEEDED, FAILED, STOPPED ]
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Projects

  CodePipelineEventProcessor:
    Type: AWS::Serverless::Function
    Properties:
      Handler: codepipeline.handler
      Environment:
        Variables:
          PROJECTS_TABLE: !Ref Projects
          LOG_LEVEL: debug
      Events:
        CodePipelineEvent:
          Type: CloudWatchEvent
          Properties:
            Pattern:
              source: [ aws.codepipeline ]
              detail-type: [ "CodePipeline Pipeline Execution State Change" ]
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Projects