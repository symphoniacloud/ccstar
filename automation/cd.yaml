AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: CD Automation for CCStar

Parameters:
  PipelineName:
    Type: String
    Default: CCStarCD

  CloudFormationArtifactsBucket:
    Type: String

Resources:
  PipelineBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 3
            Status: Enabled

  Versioner:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:073101298092:applications/codepipeline-versioner
        SemanticVersion: 1.0.2
      Parameters:
        VersionPrefix: 0.0.
        StartBuildNumber: 3

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref PipelineName
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineBucket
      RestartExecutionOnUpdate: false
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              InputArtifacts: []
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceCode
              Configuration:
                Owner: symphoniacloud
                Repo: ccstar
                Branch: main
                PollForSourceChanges: false
                OAuthToken: '{{resolve:secretsmanager:github-token}}'

        - Name: PerformPipelineActions
          Actions:
            - Name: IncrementVersion
              Namespace: Versioner
              ActionTypeId:
                Category: Invoke
                Owner: AWS
                Version: '1'
                Provider: Lambda
              Configuration:
                FunctionName: !GetAtt Versioner.Outputs.LambdaFunction
              RunOrder: 1
            - Name: BuildAndPublish
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              InputArtifacts:
                - Name: SourceCode
              Configuration:
                ProjectName: !Ref BuildAndPublish
                EnvironmentVariables: '[{"name":"VERSION","value":"#{Versioner.version}"}]'
              RunOrder: 2

  BuildAndPublish:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        Type: LINUX_CONTAINER
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: automation/cd-buildspec.yaml

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess #TODO: Reduce permissions

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codepipeline:*
                  - cloudformation:ListExports
                  - logs:*
                  - serverlessrepo:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:GetBucketLocation
                  - s3:GetObjectVersion
                  - s3:GetLifecycleConfiguration
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:PutLifecycleConfiguration
                  - s3:DeleteObject
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${PipelineBucket}"
                  - !Sub "arn:${AWS::Partition}:s3:::${PipelineBucket}/*"
                  - !Sub "arn:${AWS::Partition}:s3:::${CloudFormationArtifactsBucket}"
                  - !Sub "arn:${AWS::Partition}:s3:::${CloudFormationArtifactsBucket}/*"
